// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission8_Group2.Models;

namespace Mission8_Group2.Migrations
{
    [DbContext(typeof(MatrixInfoContext))]
    [Migration("20230224222548_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Mission8_Group2.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Urgent/Important"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Urgent/Unimportant"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Not Urgent/Important"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Not Urgent/Unimportant"
                        });
                });

            modelBuilder.Entity("Mission8_Group2.Models.MatrixResponse", b =>
                {
                    b.Property<int>("MatrixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quadrant")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Task")
                        .HasColumnType("TEXT");

                    b.HasKey("MatrixId");

                    b.HasIndex("CategoryId");

                    b.ToTable("responses");

                    b.HasData(
                        new
                        {
                            MatrixId = 1,
                            CategoryId = 1,
                            Completed = true,
                            DueDate = "Tomorrow",
                            Quadrant = 1,
                            Task = "Vacuuming the lawn"
                        },
                        new
                        {
                            MatrixId = 2,
                            CategoryId = 2,
                            Completed = false,
                            DueDate = "2/24/23",
                            Quadrant = 2,
                            Task = "Study for IS 404 Test"
                        },
                        new
                        {
                            MatrixId = 4,
                            CategoryId = 4,
                            Completed = true,
                            DueDate = "Erry Day",
                            Quadrant = 4,
                            Task = "Play Minecraft"
                        });
                });

            modelBuilder.Entity("Mission8_Group2.Models.MatrixResponse", b =>
                {
                    b.HasOne("Mission8_Group2.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
